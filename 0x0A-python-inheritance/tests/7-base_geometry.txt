MyList class doc, Inherits from list and has an extra method to sort list.

>>> import sys
>>> sys.path.append("..")
>>> bg = __import__("7-base_geometry").BaseGeometry
>>> bg_example = bg()
>>> bg_example.area()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/tayo/Documents/0. TEXTLIB/AL-xSE/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 13, in area
    raise Exception("area() is not implemented")
Exception: area() is not implemented
>>> bg_example.integer_validator("nom", -1)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/tayo/Documents/0. TEXTLIB/AL-xSE/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 21, in integer_validator
    raise ValueError("{} must be greater than 0".format(name))
ValueError: nom must be greater than 0
>>> bg_example.integer_validator("nom", 17)
>>> bg_example.integer_validator("nom", "pomme")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/tayo/Documents/0. TEXTLIB/AL-xSE/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 19, in integer_validator
    raise TypeError("{} must be an integer".format(name))
TypeError: nom must be an integer
>>> bg_example.integer_validator("age")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: integer_validator() missing 1 required positional argument: 'value'
>>> bg_example.integer_validator("age", -20)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/tayo/Documents/0. TEXTLIB/AL-xSE/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 21, in integer_validator
    raise ValueError("{} must be greater than 0".format(name))
ValueError: age must be greater than 0
>>> bg_example.integer_validator("age", 24)
>>> bg_example.integer_validator("age", 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/tayo/Documents/0. TEXTLIB/AL-xSE/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 21, in integer_validator
    raise ValueError("{} must be greater than 0".format(name))
ValueError: age must be greater than 0
>>> bg_example.integer_validator("age", [1, 2, 3])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/tayo/Documents/0. TEXTLIB/AL-xSE/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 19, in integer_validator
    raise TypeError("{} must be an integer".format(name))
TypeError: age must be an integer
>>> bg_example.integer_validator("age", True)
>>> bg_example.integer_validator("age", None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/tayo/Documents/0. TEXTLIB/AL-xSE/alx-higher_level_programming/0x0A-python-inheritance/7-base_geometry.py", line 19, in integer_validator
    raise TypeError("{} must be an integer".format(name))
TypeError: age must be an integer
